name: deployment-gate
on:
  workflow_dispatch:

jobs:
  build:
        # Running your workflow when a pull request merges
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges-1
        #if: github.event.pull_request.merged == true
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
  test:
        #if: github.event.pull_request.merged == true
        name: Test
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: List current directory
              run: ls -a
            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml
  change:
    name: Change Request
    runs-on: ubuntu-latest
    steps:     
      - name: ServiceNow DevOps Change Attributes
        uses: velivalab/servicenow-devops-change@depgate
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Change Request'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","chg_model":"adffaa9e4370211072b7f6be5bb8f2ed","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          deployment-gate: '{"environment":"dgate","jobId":"deploy","jobName":"Deploy"}'
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: change
    environment: prod
    steps:
      - name: Run deployment scripts
        run: echo Completed Deployment.
